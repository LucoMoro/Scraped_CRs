/*Fix SDK 21 bug: Incorrect R.java generated by ant failed to build if lib and app has same package name

Change-Id:I611a489dbfd2bb3fe1e15db3b6d9f156d6e32f17*/
//Synthetic comment -- diff --git a/anttasks/src/com/android/ant/AaptExecTask.java b/anttasks/src/com/android/ant/AaptExecTask.java
old mode 100644
new mode 100755
//Synthetic comment -- index 2511500..0b29b88

//Synthetic comment -- @@ -16,15 +16,6 @@

package com.android.ant;

import com.android.SdkConstants;
import com.android.sdklib.internal.build.SymbolLoader;
import com.android.sdklib.internal.build.SymbolWriter;

import org.apache.tools.ant.BuildException;
import org.apache.tools.ant.Project;
import org.apache.tools.ant.taskdefs.ExecTask;
import org.apache.tools.ant.types.Path;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
//Synthetic comment -- @@ -32,6 +23,15 @@
import java.util.List;
import java.util.Set;

/**
* Task to execute aapt.
*
//Synthetic comment -- @@ -393,6 +393,8 @@

String libPkgProp = null;
Path libRFileProp = null;

// if the parameters indicate generation of the R class, check if
// more R classes need to be created for libraries, only if this project itself
//Synthetic comment -- @@ -590,7 +592,7 @@
task.createArg().setValue("-M");
task.createArg().setValue(mManifest);
}

// Rename manifest package
if (mManifestPackage != null) {
task.createArg().setValue("--rename-manifest-package");
//Synthetic comment -- @@ -672,9 +674,6 @@
task.setProject(taskProject);
task.setOwningTarget(getOwningTarget());

        // execute it.
        task.execute();

// now if the project has libraries, R needs to be created for each libraries
// but only if the project is not a library.
try {
//Synthetic comment -- @@ -699,13 +698,12 @@
"%1$s and %2$s must contain the same number of items.",
mLibraryPackagesRefid, mLibraryRFileRefid));
}

for (int i = 0 ; i < packages.length ; i++) {
File libRFile = new File(rFiles[i]);
if (libRFile.isFile()) {
SymbolLoader symbols = new SymbolLoader(libRFile);
symbols.load();

SymbolWriter writer = new SymbolWriter(mRFolder, packages[i],
symbols, symbolValues);
writer.write();
//Synthetic comment -- @@ -717,5 +715,9 @@
throw new BuildException(e);
}

}
}







